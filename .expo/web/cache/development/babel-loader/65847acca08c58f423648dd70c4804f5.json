{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\www\\\\App-filmes\\\\src\\\\screens\\\\HomeScreen.js\";\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport COLORS from \"../constants/Colors\";\nimport FONTS from \"../constants/Fonts\";\nimport GenreCard from \"../components/GenreCard\";\nimport MovieCard from \"../components/MovieCard\";\nimport ItemSeparator from \"../components/ItemSeparator\";\nimport { getNowPlayingMovies, getUpcomingMovies, getAllGenres } from \"../services/MovieService\";\nvar Genres = [\"Todos\", \"Ação\", \"Comedia\", \"Romance\", \"Terror\", \"Sci-Fi\"];\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"All\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeGenre = _useState2[0],\n      setActiveGenre = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nowPlayingMovies = _useState4[0],\n      setNowPlayingMovies = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      upcomingMovies = _useState6[0],\n      setUpcomingMovies = _useState6[1];\n\n  var _useState7 = useState([{\n    id: 10110,\n    name: \"All\"\n  }]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      genres = _useState8[0],\n      setGenres = _useState8[1];\n\n  useEffect(function () {\n    getNowPlayingMovies().then(function (movieResponse) {\n      return setNowPlayingMovies(movieResponse.data);\n    });\n    getUpcomingMovies().then(function (movieResponse) {\n      return setUpcomingMovies(movieResponse.data);\n    });\n    getAllGenres().then(function (genreResponse) {\n      return setGenres([].concat(_toConsumableArray(genres), _toConsumableArray(genreResponse.data.genres)));\n    });\n  }, []);\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    style: \"auto\",\n    translucent: false,\n    backgroundColor: COLORS.BASIC_BACKGROUND,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.headerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.headerTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Em exibi\\xE7\\xE3o\"), React.createElement(Text, {\n    style: styles.headerSubTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Ver todos\")), React.createElement(View, {\n    style: styles.genreListContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: genres,\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(ItemSeparator, {\n        width: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 41\n        }\n      });\n    },\n    ListHeaderComponent: function ListHeaderComponent() {\n      return React.createElement(ItemSeparator, {\n        width: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 38\n        }\n      });\n    },\n    ListFooterComponent: function ListFooterComponent() {\n      return React.createElement(ItemSeparator, {\n        width: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 38\n        }\n      });\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(GenreCard, {\n        genreName: item.name,\n        active: item.name === activeGenre ? true : false,\n        onPress: setActiveGenre,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: nowPlayingMovies.results,\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(ItemSeparator, {\n        width: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 41\n        }\n      });\n    },\n    ListHeaderComponent: function ListHeaderComponent() {\n      return React.createElement(ItemSeparator, {\n        width: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 38\n        }\n      });\n    },\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(MovieCard, {\n        title: item.title,\n        language: item.original_language,\n        voteAverage: item.vote_average,\n        voteCount: item.vote_count,\n        poster: item.poster_path,\n        heartLess: false,\n        onPress: function onPress() {\n          return navigation.navigate(\"movie\", {\n            movieId: item.id\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.headerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.headerTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Em destaque\"), React.createElement(Text, {\n    style: styles.headerSubTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Ver todos\")), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: upcomingMovies.results,\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(ItemSeparator, {\n        width: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 41\n        }\n      });\n    },\n    ListHeaderComponent: function ListHeaderComponent() {\n      return React.createElement(ItemSeparator, {\n        width: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 38\n        }\n      });\n    },\n    ListFooterComponent: function ListFooterComponent() {\n      return React.createElement(ItemSeparator, {\n        width: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 38\n        }\n      });\n    },\n    renderItem: function renderItem(_ref4) {\n      var item = _ref4.item;\n      return React.createElement(MovieCard, {\n        title: item.title,\n        language: item.original_language,\n        voteAverage: item.vote_average,\n        voteCount: item.vote_count,\n        poster: item.poster_path,\n        size: 0.6,\n        onPress: function onPress() {\n          return navigation.navigate(\"movie\", {\n            movieId: item.id\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.BASIC_BACKGROUND\n  },\n  headerContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingHorizontal: 20,\n    paddingVertical: 10\n  },\n  headerTitle: {\n    fontSize: 28,\n    fontFamily: FONTS.REGULAR\n  },\n  headerSubTitle: {\n    fontSize: 13,\n    color: COLORS.ACTIVE,\n    fontFamily: FONTS.BOLD\n  },\n  genreListContainer: {\n    paddingVertical: 10\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["C:/www/App-filmes/src/screens/HomeScreen.js"],"names":["StatusBar","React","useState","useEffect","COLORS","FONTS","GenreCard","MovieCard","ItemSeparator","getNowPlayingMovies","getUpcomingMovies","getAllGenres","Genres","HomeScreen","navigation","activeGenre","setActiveGenre","nowPlayingMovies","setNowPlayingMovies","upcomingMovies","setUpcomingMovies","id","name","genres","setGenres","then","movieResponse","data","genreResponse","styles","container","BASIC_BACKGROUND","headerContainer","headerTitle","headerSubTitle","genreListContainer","item","toString","results","title","original_language","vote_average","vote_count","poster_path","navigate","movieId","StyleSheet","create","flex","backgroundColor","flexDirection","justifyContent","alignItems","paddingHorizontal","paddingVertical","fontSize","fontFamily","REGULAR","color","ACTIVE","BOLD"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View, ScrollView, FlatList } from \"react-native\";\r\nimport COLORS from \"../constants/Colors\";\r\nimport FONTS from \"../constants/Fonts\";\r\nimport GenreCard from \"../components/GenreCard\";\r\nimport MovieCard from \"../components/MovieCard\";\r\nimport ItemSeparator from \"../components/ItemSeparator\";\r\nimport {\r\n  getNowPlayingMovies,\r\n  getUpcomingMovies,\r\n  getAllGenres,\r\n} from \"../services/MovieService\";\r\n\r\nconst Genres = [\"Todos\", \"Ação\", \"Comedia\", \"Romance\", \"Terror\", \"Sci-Fi\"];\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  const [activeGenre, setActiveGenre] = useState(\"All\");\r\n  const [nowPlayingMovies, setNowPlayingMovies] = useState({});\r\n  const [upcomingMovies, setUpcomingMovies] = useState({});\r\n  const [genres, setGenres] = useState([{ id: 10110, name: \"All\" }]);\r\n\r\n  useEffect(() => {\r\n    getNowPlayingMovies().then((movieResponse) =>\r\n      setNowPlayingMovies(movieResponse.data)\r\n    );\r\n    getUpcomingMovies().then((movieResponse) =>\r\n      setUpcomingMovies(movieResponse.data)\r\n    );\r\n    getAllGenres().then((genreResponse) =>\r\n      setGenres([...genres, ...genreResponse.data.genres])\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <StatusBar\r\n        style=\"auto\"\r\n        translucent={false}\r\n        backgroundColor={COLORS.BASIC_BACKGROUND}\r\n      />\r\n      <View style={styles.headerContainer}>\r\n        <Text style={styles.headerTitle}>Em exibição</Text>\r\n        <Text style={styles.headerSubTitle}>Ver todos</Text>\r\n      </View>\r\n      <View style={styles.genreListContainer}>\r\n        <FlatList\r\n          data={genres}\r\n          horizontal\r\n          showsHorizontalScrollIndicator={false}\r\n          keyExtractor={(item) => item.id.toString()}\r\n          ItemSeparatorComponent={() => <ItemSeparator width={20} />}\r\n          ListHeaderComponent={() => <ItemSeparator width={20} />}\r\n          ListFooterComponent={() => <ItemSeparator width={20} />}\r\n          renderItem={({ item }) => (\r\n            <GenreCard\r\n              genreName={item.name}\r\n              active={item.name === activeGenre ? true : false}\r\n              onPress={setActiveGenre}\r\n            />\r\n          )}\r\n        />\r\n      </View>\r\n      <View>\r\n        <FlatList\r\n          data={nowPlayingMovies.results}\r\n          horizontal\r\n          showsHorizontalScrollIndicator={false}\r\n          keyExtractor={(item) => item.id.toString()}\r\n          ItemSeparatorComponent={() => <ItemSeparator width={20} />}\r\n          ListHeaderComponent={() => <ItemSeparator width={20} />}\r\n          renderItem={({ item }) => (\r\n            <MovieCard\r\n              title={item.title}\r\n              language={item.original_language}\r\n              voteAverage={item.vote_average}\r\n              voteCount={item.vote_count}\r\n              poster={item.poster_path}\r\n              heartLess={false}\r\n              onPress={() => navigation.navigate(\"movie\", { movieId: item.id })}\r\n            />\r\n          )}\r\n        />\r\n      </View>\r\n      <View style={styles.headerContainer}>\r\n        <Text style={styles.headerTitle}>Em destaque</Text>\r\n        <Text style={styles.headerSubTitle}>Ver todos</Text>\r\n      </View>\r\n      <View>\r\n        <FlatList\r\n          data={upcomingMovies.results}\r\n          horizontal\r\n          showsHorizontalScrollIndicator={false}\r\n          keyExtractor={(item) => item.id.toString()}\r\n          ItemSeparatorComponent={() => <ItemSeparator width={20} />}\r\n          ListHeaderComponent={() => <ItemSeparator width={20} />}\r\n          ListFooterComponent={() => <ItemSeparator width={20} />}\r\n          renderItem={({ item }) => (\r\n            <MovieCard\r\n              title={item.title}\r\n              language={item.original_language}\r\n              voteAverage={item.vote_average}\r\n              voteCount={item.vote_count}\r\n              poster={item.poster_path}\r\n              size={0.6}\r\n              onPress={() => navigation.navigate(\"movie\", { movieId: item.id })}\r\n            />\r\n          )}\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.BASIC_BACKGROUND,\r\n  },\r\n  headerContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 28,\r\n    fontFamily: FONTS.REGULAR,\r\n  },\r\n  headerSubTitle: {\r\n    fontSize: 13,\r\n    color: COLORS.ACTIVE,\r\n    fontFamily: FONTS.BOLD,\r\n  },\r\n  genreListContainer: {\r\n    paddingVertical: 10,\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n"]},"metadata":{},"sourceType":"module"}