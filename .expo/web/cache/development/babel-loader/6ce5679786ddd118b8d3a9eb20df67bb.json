{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\www\\\\App-filmes\\\\src\\\\screens\\\\MovieScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport COLORS from \"../constants/Colors\";\nimport FONTS from \"../constants/Fonts\";\nimport { getMovieById, getPoster, getVideo, getLanguage } from \"../services/MovieService\";\nimport ItemSeparator from \"../components/ItemSeparator\";\nimport CastCard from \"../components/CastCard\";\nimport MovieCard from \"../components/MovieCard\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { Feather, Ionicons } from \"@expo/vector-icons\";\nimport { APPEND_TO_RESPONSE as AR } from \"../constants/Urls\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar setHeight = function setHeight(h) {\n  return height / 100 * h;\n};\n\nvar setWidth = function setWidth(w) {\n  return width / 100 * w;\n};\n\nvar MovieScreen = function MovieScreen(_ref) {\n  var _movie$genres, _movie$genres$map, _getLanguage, _movie$credits, _movie$credits2, _movie$recommendation, _movie$similar;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var movieId = route.params.movieId;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      movie = _useState2[0],\n      setMovie = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isCastSelected = _useState4[0],\n      setIsCastSelected = _useState4[1];\n\n  useEffect(function () {\n    getMovieById(movieId, AR.VIDEOS + \",\" + AR.CREDITS + \",\" + AR.RECOMMENDATIONS + \",\" + AR.SIMILAR).then(function (response) {\n      return setMovie(response == null ? void 0 : response.data);\n    });\n  }, []);\n  return React.createElement(ScrollView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), React.createElement(LinearGradient, {\n    colors: [\"rgba(0, 0, 0, 0.5)\", \"rgba(217, 217, 217, 0)\"],\n    start: [0, 0.3],\n    style: styles.linearGradient,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.moviePosterImageContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.moviePosterImage,\n    resizeMode: \"cover\",\n    source: {\n      uri: getPoster(movie == null ? void 0 : movie.backdrop_path)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.headerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.5,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(Feather, {\n    name: \"chevron-left\",\n    size: 35,\n    color: COLORS.WHITE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.5,\n    onPress: function onPress() {\n      return Share.share({\n        message: (movie == null ? void 0 : movie.title) + \"\\n\\n\" + (movie == null ? void 0 : movie.homepage)\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Share\"))), React.createElement(TouchableOpacity, {\n    style: styles.playButton,\n    onPress: function onPress() {\n      return Linking.openURL(getVideo(movie.videos.results[0].key));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(Ionicons, {\n    name: \"play-circle-outline\",\n    size: 70,\n    color: COLORS.WHITE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), React.createElement(ItemSeparator, {\n    height: setHeight(37),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.movieTitleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.movieTitle,\n    numberOfLines: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, movie == null ? void 0 : movie.original_title), React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    name: \"heart\",\n    size: 22,\n    color: COLORS.HEART,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.ratingText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, movie == null ? void 0 : movie.vote_average))), React.createElement(Text, {\n    style: styles.genreText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, movie == null ? void 0 : (_movie$genres = movie.genres) == null ? void 0 : (_movie$genres$map = _movie$genres.map(function (genre) {\n    return genre == null ? void 0 : genre.name;\n  })) == null ? void 0 : _movie$genres$map.join(\", \"), \" |\", \" \", movie == null ? void 0 : movie.runtime, \" Min\"), React.createElement(Text, {\n    style: styles.genreText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, (_getLanguage = getLanguage(movie == null ? void 0 : movie.original_language)) == null ? void 0 : _getLanguage.english_name), React.createElement(View, {\n    style: styles.overviewContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.overviewTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Overview\"), React.createElement(Text, {\n    style: styles.overviewText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, movie == null ? void 0 : movie.overview)), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.castTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Cast\"), React.createElement(View, {\n    style: styles.castSubMenuContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.5,\n    onPress: function onPress() {\n      return setIsCastSelected(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.castSubMenuText), {}, {\n      color: isCastSelected ? COLORS.BLACK : COLORS.LIGHT_GRAY\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Cast\")), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.5,\n    onPress: function onPress() {\n      return setIsCastSelected(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.castSubMenuText), {}, {\n      color: isCastSelected ? COLORS.LIGHT_GRAY : COLORS.BLACK\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Crew\"))), React.createElement(FlatList, {\n    style: {\n      marginVertical: 5\n    },\n    data: isCastSelected ? movie == null ? void 0 : (_movie$credits = movie.credits) == null ? void 0 : _movie$credits.cast : movie == null ? void 0 : (_movie$credits2 = movie.credits) == null ? void 0 : _movie$credits2.crew,\n    keyExtractor: function keyExtractor(item) {\n      return item == null ? void 0 : item.credit_id;\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    ListHeaderComponent: function ListHeaderComponent() {\n      return React.createElement(ItemSeparator, {\n        width: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 38\n        }\n      });\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(ItemSeparator, {\n        width: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 41\n        }\n      });\n    },\n    ListFooterComponent: function ListFooterComponent() {\n      return React.createElement(ItemSeparator, {\n        width: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 38\n        }\n      });\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(CastCard, {\n        originalName: item == null ? void 0 : item.name,\n        characterName: isCastSelected ? item == null ? void 0 : item.character : item == null ? void 0 : item.job,\n        image: item == null ? void 0 : item.profile_path,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    style: styles.extraListTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, \"Recommended Movies\"), React.createElement(FlatList, {\n    data: movie == null ? void 0 : (_movie$recommendation = movie.recommendations) == null ? void 0 : _movie$recommendation.results,\n    keyExtractor: function keyExtractor(item) {\n      var _item$id;\n\n      return item == null ? void 0 : (_item$id = item.id) == null ? void 0 : _item$id.toString();\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    ListHeaderComponent: function ListHeaderComponent() {\n      return React.createElement(ItemSeparator, {\n        width: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 36\n        }\n      });\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(ItemSeparator, {\n        width: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 39\n        }\n      });\n    },\n    ListFooterComponent: function ListFooterComponent() {\n      return React.createElement(ItemSeparator, {\n        width: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 36\n        }\n      });\n    },\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(MovieCard, {\n        title: item.title,\n        language: item.original_language,\n        voteAverage: item.vote_average,\n        voteCount: item.vote_count,\n        poster: item.poster_path,\n        size: 0.6,\n        onPress: function onPress() {\n          return navigation.navigate(\"movie\", {\n            movieId: item.id\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.extraListTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, \"Similar Movies\"), React.createElement(FlatList, {\n    data: movie == null ? void 0 : (_movie$similar = movie.similar) == null ? void 0 : _movie$similar.results,\n    keyExtractor: function keyExtractor(item) {\n      var _item$id2;\n\n      return item == null ? void 0 : (_item$id2 = item.id) == null ? void 0 : _item$id2.toString();\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    ListHeaderComponent: function ListHeaderComponent() {\n      return React.createElement(ItemSeparator, {\n        width: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 36\n        }\n      });\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(ItemSeparator, {\n        width: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 39\n        }\n      });\n    },\n    ListFooterComponent: function ListFooterComponent() {\n      return React.createElement(ItemSeparator, {\n        width: 20,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 36\n        }\n      });\n    },\n    renderItem: function renderItem(_ref4) {\n      var item = _ref4.item;\n      return React.createElement(MovieCard, {\n        title: item.title,\n        language: item.original_language,\n        voteAverage: item.vote_average,\n        voteCount: item.vote_count,\n        poster: item.poster_path,\n        size: 0.6,\n        onPress: function onPress() {\n          return navigation.navigate(\"movie\", {\n            movieId: item.id\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.BASIC_BACKGROUND\n  },\n  moviePosterImageContainer: {\n    height: setHeight(35),\n    width: setWidth(145),\n    alignItems: \"center\",\n    position: \"absolute\",\n    left: setWidth((100 - 145) / 2),\n    top: 0,\n    borderBottomRightRadius: 300,\n    borderBottomLeftRadius: 300,\n    elevation: 8\n  },\n  moviePosterImage: {\n    borderBottomRightRadius: 300,\n    borderBottomLeftRadius: 300,\n    width: setWidth(145),\n    height: setHeight(35)\n  },\n  linearGradient: {\n    width: setWidth(100),\n    height: setHeight(6),\n    position: \"absolute\",\n    top: 0,\n    elevation: 9\n  },\n  headerContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 20,\n    position: \"absolute\",\n    right: 0,\n    left: 0,\n    top: 50,\n    elevation: 20\n  },\n  headerText: {\n    color: COLORS.WHITE,\n    fontFamily: FONTS.BOLD\n  },\n  playButton: {\n    position: \"absolute\",\n    top: 110,\n    left: setWidth(50) - 70 / 2,\n    elevation: 10\n  },\n  movieTitleContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 20\n  },\n  movieTitle: {\n    color: COLORS.BLACK,\n    fontFamily: FONTS.EXTRA_BOLD,\n    fontSize: 18,\n    width: setWidth(60)\n  },\n  ratingText: {\n    marginLeft: 5,\n    color: COLORS.BLACK,\n    fontFamily: FONTS.EXTRA_BOLD,\n    fontSize: 15\n  },\n  row: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  genreText: {\n    color: COLORS.LIGHT_GRAY,\n    paddingHorizontal: 20,\n    paddingTop: 5,\n    fontFamily: FONTS.BOLD,\n    fontSize: 13\n  },\n  overviewContainer: {\n    backgroundColor: COLORS.EXTRA_LIGHT_GRAY,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    marginVertical: 10\n  },\n  overviewTitle: {\n    color: COLORS.BLACK,\n    fontFamily: FONTS.BOLD,\n    fontSize: 18\n  },\n  overviewText: {\n    color: COLORS.LIGHT_GRAY,\n    paddingVertical: 5,\n    fontFamily: FONTS.BOLD,\n    fontSize: 13,\n    textAlign: \"justify\"\n  },\n  castTitle: {\n    marginLeft: 20,\n    color: COLORS.BLACK,\n    fontFamily: FONTS.BOLD,\n    fontSize: 18\n  },\n  castSubMenuContainer: {\n    marginLeft: 20,\n    flexDirection: \"row\",\n    marginVertical: 5\n  },\n  castSubMenuText: {\n    marginRight: 10,\n    color: COLORS.BLACK,\n    fontFamily: FONTS.BOLD,\n    fontSize: 13\n  },\n  extraListTitle: {\n    marginLeft: 20,\n    color: COLORS.BLACK,\n    fontFamily: FONTS.BOLD,\n    fontSize: 18,\n    marginVertical: 8\n  }\n});\nexport default MovieScreen;","map":{"version":3,"sources":["C:/www/App-filmes/src/screens/MovieScreen.js"],"names":["StatusBar","React","useState","useEffect","COLORS","FONTS","getMovieById","getPoster","getVideo","getLanguage","ItemSeparator","CastCard","MovieCard","LinearGradient","Feather","Ionicons","APPEND_TO_RESPONSE","AR","Dimensions","get","height","width","setHeight","h","setWidth","w","MovieScreen","route","navigation","movieId","params","movie","setMovie","isCastSelected","setIsCastSelected","VIDEOS","CREDITS","RECOMMENDATIONS","SIMILAR","then","response","data","styles","container","linearGradient","moviePosterImageContainer","moviePosterImage","uri","backdrop_path","headerContainer","goBack","WHITE","Share","share","message","title","homepage","headerText","playButton","Linking","openURL","videos","results","key","movieTitleContainer","movieTitle","original_title","row","HEART","ratingText","vote_average","genreText","genres","map","genre","name","join","runtime","original_language","english_name","overviewContainer","overviewTitle","overviewText","overview","castTitle","castSubMenuContainer","castSubMenuText","color","BLACK","LIGHT_GRAY","marginVertical","credits","cast","crew","item","credit_id","character","job","profile_path","extraListTitle","recommendations","id","toString","vote_count","poster_path","navigate","similar","StyleSheet","create","flex","backgroundColor","BASIC_BACKGROUND","alignItems","position","left","top","borderBottomRightRadius","borderBottomLeftRadius","elevation","flexDirection","justifyContent","paddingHorizontal","right","fontFamily","BOLD","EXTRA_BOLD","fontSize","marginLeft","paddingTop","EXTRA_LIGHT_GRAY","paddingVertical","textAlign","marginRight"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Dimensions,\r\n  Image,\r\n  TouchableOpacity,\r\n  Linking,\r\n  FlatList,\r\n  Share,\r\n} from \"react-native\";\r\nimport COLORS from \"../constants/Colors\";\r\nimport FONTS from \"../constants/Fonts\";\r\nimport {\r\n  getMovieById,\r\n  getPoster,\r\n  getVideo,\r\n  getLanguage,\r\n} from \"../services/MovieService\";\r\nimport ItemSeparator from \"../components/ItemSeparator\";\r\nimport CastCard from \"../components/CastCard\";\r\nimport MovieCard from \"../components/MovieCard\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Feather, Ionicons } from \"@expo/vector-icons\";\r\nimport { APPEND_TO_RESPONSE as AR } from \"../constants/Urls\";\r\n\r\nconst { height, width } = Dimensions.get(\"window\");\r\n\r\nconst setHeight = (h) => (height / 100) * h;\r\nconst setWidth = (w) => (width / 100) * w;\r\n\r\nconst MovieScreen = ({ route, navigation }) => {\r\n  const { movieId } = route.params;\r\n  const [movie, setMovie] = useState({});\r\n  const [isCastSelected, setIsCastSelected] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getMovieById(\r\n      movieId,\r\n      `${AR.VIDEOS},${AR.CREDITS},${AR.RECOMMENDATIONS},${AR.SIMILAR}`\r\n    ).then((response) => setMovie(response?.data));\r\n  }, []);\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <StatusBar style=\"light\" />\r\n      <LinearGradient\r\n        colors={[\"rgba(0, 0, 0, 0.5)\", \"rgba(217, 217, 217, 0)\"]}\r\n        start={[0, 0.3]}\r\n        style={styles.linearGradient}\r\n      />\r\n      <View style={styles.moviePosterImageContainer}>\r\n        <Image\r\n          style={styles.moviePosterImage}\r\n          resizeMode=\"cover\"\r\n          source={{ uri: getPoster(movie?.backdrop_path) }}\r\n        />\r\n      </View>\r\n      <View style={styles.headerContainer}>\r\n        <TouchableOpacity\r\n          activeOpacity={0.5}\r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <Feather name=\"chevron-left\" size={35} color={COLORS.WHITE} />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          activeOpacity={0.5}\r\n          onPress={() =>\r\n            Share.share({ message: `${movie?.title}\\n\\n${movie?.homepage}` })\r\n          }\r\n        >\r\n          <Text style={styles.headerText}>Share</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <TouchableOpacity\r\n        style={styles.playButton}\r\n        onPress={() => Linking.openURL(getVideo(movie.videos.results[0].key))}\r\n      >\r\n        <Ionicons name=\"play-circle-outline\" size={70} color={COLORS.WHITE} />\r\n      </TouchableOpacity>\r\n      <ItemSeparator height={setHeight(37)} />\r\n      <View style={styles.movieTitleContainer}>\r\n        <Text style={styles.movieTitle} numberOfLines={2}>\r\n          {movie?.original_title}\r\n        </Text>\r\n        <View style={styles.row}>\r\n          <Ionicons name=\"heart\" size={22} color={COLORS.HEART} />\r\n          <Text style={styles.ratingText}>{movie?.vote_average}</Text>\r\n        </View>\r\n      </View>\r\n      <Text style={styles.genreText}>\r\n        {movie?.genres?.map((genre) => genre?.name)?.join(\", \")} |{\" \"}\r\n        {movie?.runtime} Min\r\n      </Text>\r\n      <Text style={styles.genreText}>\r\n        {getLanguage(movie?.original_language)?.english_name}\r\n      </Text>\r\n      <View style={styles.overviewContainer}>\r\n        <Text style={styles.overviewTitle}>Overview</Text>\r\n        <Text style={styles.overviewText}>{movie?.overview}</Text>\r\n      </View>\r\n      <View>\r\n        <Text style={styles.castTitle}>Cast</Text>\r\n        <View style={styles.castSubMenuContainer}>\r\n          <TouchableOpacity\r\n            activeOpacity={0.5}\r\n            onPress={() => setIsCastSelected(true)}\r\n          >\r\n            <Text\r\n              style={{\r\n                ...styles.castSubMenuText,\r\n                color: isCastSelected ? COLORS.BLACK : COLORS.LIGHT_GRAY,\r\n              }}\r\n            >\r\n              Cast\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            activeOpacity={0.5}\r\n            onPress={() => setIsCastSelected(false)}\r\n          >\r\n            <Text\r\n              style={{\r\n                ...styles.castSubMenuText,\r\n                color: isCastSelected ? COLORS.LIGHT_GRAY : COLORS.BLACK,\r\n              }}\r\n            >\r\n              Crew\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <FlatList\r\n          style={{ marginVertical: 5 }}\r\n          data={isCastSelected ? movie?.credits?.cast : movie?.credits?.crew}\r\n          keyExtractor={(item) => item?.credit_id}\r\n          horizontal\r\n          showsHorizontalScrollIndicator={false}\r\n          ListHeaderComponent={() => <ItemSeparator width={20} />}\r\n          ItemSeparatorComponent={() => <ItemSeparator width={20} />}\r\n          ListFooterComponent={() => <ItemSeparator width={20} />}\r\n          renderItem={({ item }) => (\r\n            <CastCard\r\n              originalName={item?.name}\r\n              characterName={isCastSelected ? item?.character : item?.job}\r\n              image={item?.profile_path}\r\n            />\r\n          )}\r\n        />\r\n      </View>\r\n      <Text style={styles.extraListTitle}>Recommended Movies</Text>\r\n      <FlatList\r\n        data={movie?.recommendations?.results}\r\n        keyExtractor={(item) => item?.id?.toString()}\r\n        horizontal\r\n        showsHorizontalScrollIndicator={false}\r\n        ListHeaderComponent={() => <ItemSeparator width={20} />}\r\n        ItemSeparatorComponent={() => <ItemSeparator width={20} />}\r\n        ListFooterComponent={() => <ItemSeparator width={20} />}\r\n        renderItem={({ item }) => (\r\n          <MovieCard\r\n            title={item.title}\r\n            language={item.original_language}\r\n            voteAverage={item.vote_average}\r\n            voteCount={item.vote_count}\r\n            poster={item.poster_path}\r\n            size={0.6}\r\n            onPress={() => navigation.navigate(\"movie\", { movieId: item.id })}\r\n          />\r\n        )}\r\n      />\r\n      <Text style={styles.extraListTitle}>Similar Movies</Text>\r\n      <FlatList\r\n        data={movie?.similar?.results}\r\n        keyExtractor={(item) => item?.id?.toString()}\r\n        horizontal\r\n        showsHorizontalScrollIndicator={false}\r\n        ListHeaderComponent={() => <ItemSeparator width={20} />}\r\n        ItemSeparatorComponent={() => <ItemSeparator width={20} />}\r\n        ListFooterComponent={() => <ItemSeparator width={20} />}\r\n        renderItem={({ item }) => (\r\n          <MovieCard\r\n            title={item.title}\r\n            language={item.original_language}\r\n            voteAverage={item.vote_average}\r\n            voteCount={item.vote_count}\r\n            poster={item.poster_path}\r\n            size={0.6}\r\n            onPress={() => navigation.navigate(\"movie\", { movieId: item.id })}\r\n          />\r\n        )}\r\n      />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.BASIC_BACKGROUND,\r\n  },\r\n  moviePosterImageContainer: {\r\n    height: setHeight(35),\r\n    width: setWidth(145),\r\n    alignItems: \"center\",\r\n    position: \"absolute\",\r\n    left: setWidth((100 - 145) / 2),\r\n    top: 0,\r\n    borderBottomRightRadius: 300,\r\n    borderBottomLeftRadius: 300,\r\n    elevation: 8,\r\n  },\r\n  moviePosterImage: {\r\n    borderBottomRightRadius: 300,\r\n    borderBottomLeftRadius: 300,\r\n    width: setWidth(145),\r\n    height: setHeight(35),\r\n  },\r\n  linearGradient: {\r\n    width: setWidth(100),\r\n    height: setHeight(6),\r\n    position: \"absolute\",\r\n    top: 0,\r\n    elevation: 9,\r\n  },\r\n  headerContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    paddingHorizontal: 20,\r\n    position: \"absolute\",\r\n    right: 0,\r\n    left: 0,\r\n    top: 50,\r\n    elevation: 20,\r\n  },\r\n  headerText: {\r\n    color: COLORS.WHITE,\r\n    fontFamily: FONTS.BOLD,\r\n  },\r\n  playButton: {\r\n    position: \"absolute\",\r\n    top: 110,\r\n    left: setWidth(50) - 70 / 2,\r\n    elevation: 10,\r\n  },\r\n  movieTitleContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    paddingHorizontal: 20,\r\n  },\r\n  movieTitle: {\r\n    color: COLORS.BLACK,\r\n    fontFamily: FONTS.EXTRA_BOLD,\r\n    fontSize: 18,\r\n    width: setWidth(60),\r\n  },\r\n  ratingText: {\r\n    marginLeft: 5,\r\n    color: COLORS.BLACK,\r\n    fontFamily: FONTS.EXTRA_BOLD,\r\n    fontSize: 15,\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  genreText: {\r\n    color: COLORS.LIGHT_GRAY,\r\n    paddingHorizontal: 20,\r\n    paddingTop: 5,\r\n    fontFamily: FONTS.BOLD,\r\n    fontSize: 13,\r\n  },\r\n  overviewContainer: {\r\n    backgroundColor: COLORS.EXTRA_LIGHT_GRAY,\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    marginVertical: 10,\r\n  },\r\n  overviewTitle: {\r\n    color: COLORS.BLACK,\r\n    fontFamily: FONTS.BOLD,\r\n    fontSize: 18,\r\n  },\r\n  overviewText: {\r\n    color: COLORS.LIGHT_GRAY,\r\n    paddingVertical: 5,\r\n    fontFamily: FONTS.BOLD,\r\n    fontSize: 13,\r\n    textAlign: \"justify\",\r\n  },\r\n  castTitle: {\r\n    marginLeft: 20,\r\n    color: COLORS.BLACK,\r\n    fontFamily: FONTS.BOLD,\r\n    fontSize: 18,\r\n  },\r\n  castSubMenuContainer: {\r\n    marginLeft: 20,\r\n    flexDirection: \"row\",\r\n    marginVertical: 5,\r\n  },\r\n  castSubMenuText: {\r\n    marginRight: 10,\r\n    color: COLORS.BLACK,\r\n    fontFamily: FONTS.BOLD,\r\n    fontSize: 13,\r\n  },\r\n  extraListTitle: {\r\n    marginLeft: 20,\r\n    color: COLORS.BLACK,\r\n    fontFamily: FONTS.BOLD,\r\n    fontSize: 18,\r\n    marginVertical: 8,\r\n  },\r\n});\r\n\r\nexport default MovieScreen;\r\n"]},"metadata":{},"sourceType":"module"}