{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\www\\\\App-filmes\\\\src\\\\components\\\\MovieCard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport COLORS from \"../constants/Colors\";\nimport FONTS from \"../constants/Fonts\";\nimport IMAGES from \"../constants/Images\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { getPoster, getLanguage } from \"../services/MovieService\";\n\nvar MovieCard = function MovieCard(_ref) {\n  var title = _ref.title,\n      poster = _ref.poster,\n      language = _ref.language,\n      voteAverage = _ref.voteAverage,\n      voteCount = _ref.voteCount,\n      size = _ref.size,\n      heartLess = _ref.heartLess,\n      onPress = _ref.onPress;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      liked = _useState2[0],\n      setLiked = _useState2[1];\n\n  var _useState3 = useState(voteCount),\n      _useState4 = _slicedToArray(_useState3, 2),\n      voteCountValue = _useState4[0],\n      setVoteCountValue = _useState4[1];\n\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: 0.8,\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    style: _objectSpread(_objectSpread({}, styles.container), {}, {\n      width: 230 * size,\n      height: 340 * size\n    }),\n    imageStyle: {\n      borderRadius: 12\n    },\n    source: {\n      uri: getPoster(poster)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.imdbContainer), {}, {\n      paddingVertical: 3 * size\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: IMAGES.IMDB,\n    resizeMode: \"cover\",\n    style: _objectSpread(_objectSpread({}, styles.imdbImage), {}, {\n      height: 20 * size,\n      width: 50 * size\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.imdbRating), {}, {\n      marginRight: 5 * size,\n      fontSize: 14 * size\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, voteAverage)), !heartLess ? React.createElement(TouchableNativeFeedback, {\n    onPress: function onPress() {\n      setLiked(!liked);\n      setVoteCountValue(liked ? voteCountValue - 1 : voteCountValue + 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, React.createElement(Ionicons, {\n    name: liked ? \"heart\" : \"heart-outline\",\n    size: 25 * size,\n    color: liked ? COLORS.HEART : COLORS.WHITE,\n    style: {\n      position: \"absolute\",\n      bottom: 10,\n      left: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })) : null), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.movieTitle), {}, {\n      width: 230 * size\n    }),\n    numberOfLines: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, title), React.createElement(View, {\n    style: styles.movieSubTitleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.movieSubTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, getLanguage(language).english_name), React.createElement(View, {\n    style: styles.rowAndCenter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, React.createElement(Ionicons, {\n    name: \"heart\",\n    size: 17 * size,\n    color: COLORS.HEART,\n    style: {\n      marginRight: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.movieSubTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, voteCountValue)))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    height: 340,\n    width: 230,\n    borderRadius: 12,\n    elevation: 5,\n    marginVertical: 2\n  },\n  movieTitle: {\n    fontFamily: FONTS.EXTRA_BOLD,\n    color: COLORS.GRAY,\n    paddingVertical: 2,\n    marginTop: 5,\n    width: 230\n  },\n  movieSubTitleContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  movieSubTitle: {\n    fontSize: 12,\n    fontFamily: FONTS.REGULAR\n  },\n  rowAndCenter: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  imdbContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    alignSelf: \"flex-end\",\n    backgroundColor: COLORS.YELLOW,\n    borderBottomLeftRadius: 5,\n    borderTopRightRadius: 12,\n    paddingVertical: 3\n  },\n  imdbImage: {\n    height: 20,\n    width: 50,\n    borderBottomLeftRadius: 5\n  },\n  imdbRating: {\n    marginRight: 5,\n    color: COLORS.HEART,\n    fontFamily: FONTS.EXTRA_BOLD\n  }\n});\nMovieCard.defaultProps = {\n  size: 1,\n  heartLess: true\n};\nexport default MovieCard;","map":{"version":3,"sources":["C:/www/App-filmes/src/components/MovieCard.js"],"names":["React","useState","COLORS","FONTS","IMAGES","Ionicons","getPoster","getLanguage","MovieCard","title","poster","language","voteAverage","voteCount","size","heartLess","onPress","liked","setLiked","voteCountValue","setVoteCountValue","styles","container","width","height","borderRadius","uri","imdbContainer","paddingVertical","IMDB","imdbImage","imdbRating","marginRight","fontSize","HEART","WHITE","position","bottom","left","movieTitle","movieSubTitleContainer","movieSubTitle","english_name","rowAndCenter","StyleSheet","create","elevation","marginVertical","fontFamily","EXTRA_BOLD","color","GRAY","marginTop","flexDirection","alignItems","justifyContent","REGULAR","alignSelf","backgroundColor","YELLOW","borderBottomLeftRadius","borderTopRightRadius","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Image,\r\n  TouchableNativeFeedback,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport COLORS from \"../constants/Colors\";\r\nimport FONTS from \"../constants/Fonts\";\r\nimport IMAGES from \"../constants/Images\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { getPoster, getLanguage } from \"../services/MovieService\";\r\n\r\nconst MovieCard = ({\r\n  title,\r\n  poster,\r\n  language,\r\n  voteAverage,\r\n  voteCount,\r\n  size,\r\n  heartLess,\r\n  onPress,\r\n}) => {\r\n  const [liked, setLiked] = useState(false);\r\n  const [voteCountValue, setVoteCountValue] = useState(voteCount);\r\n\r\n  return (\r\n    <TouchableOpacity activeOpacity={0.8} onPress={onPress}>\r\n      <ImageBackground\r\n        style={{ ...styles.container, width: 230 * size, height: 340 * size }}\r\n        imageStyle={{ borderRadius: 12 }}\r\n        source={{ uri: getPoster(poster) }}\r\n      >\r\n        <View style={{ ...styles.imdbContainer, paddingVertical: 3 * size }}>\r\n          <Image\r\n            source={IMAGES.IMDB}\r\n            resizeMode=\"cover\"\r\n            style={{ ...styles.imdbImage, height: 20 * size, width: 50 * size }}\r\n          />\r\n          <Text\r\n            style={{\r\n              ...styles.imdbRating,\r\n              marginRight: 5 * size,\r\n              fontSize: 14 * size,\r\n            }}\r\n          >\r\n            {voteAverage}\r\n          </Text>\r\n        </View>\r\n        {!heartLess ? (\r\n          <TouchableNativeFeedback\r\n            onPress={() => {\r\n              setLiked(!liked);\r\n              setVoteCountValue(\r\n                liked ? voteCountValue - 1 : voteCountValue + 1\r\n              );\r\n            }}\r\n          >\r\n            <Ionicons\r\n              name={liked ? \"heart\" : \"heart-outline\"}\r\n              size={25 * size}\r\n              color={liked ? COLORS.HEART : COLORS.WHITE}\r\n              style={{ position: \"absolute\", bottom: 10, left: 10 }}\r\n            />\r\n          </TouchableNativeFeedback>\r\n        ) : null}\r\n      </ImageBackground>\r\n      <View>\r\n        <Text\r\n          style={{ ...styles.movieTitle, width: 230 * size }}\r\n          numberOfLines={3}\r\n        >\r\n          {title}\r\n        </Text>\r\n        <View style={styles.movieSubTitleContainer}>\r\n          <Text style={styles.movieSubTitle}>\r\n            {getLanguage(language).english_name}\r\n          </Text>\r\n          <View style={styles.rowAndCenter}>\r\n            <Ionicons\r\n              name=\"heart\"\r\n              size={17 * size}\r\n              color={COLORS.HEART}\r\n              style={{ marginRight: 5 }}\r\n            />\r\n            <Text style={styles.movieSubTitle}>{voteCountValue}</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: 340,\r\n    width: 230,\r\n    borderRadius: 12,\r\n    elevation: 5,\r\n    marginVertical: 2,\r\n  },\r\n  movieTitle: {\r\n    fontFamily: FONTS.EXTRA_BOLD,\r\n    color: COLORS.GRAY,\r\n    paddingVertical: 2,\r\n    marginTop: 5,\r\n    width: 230,\r\n  },\r\n  movieSubTitleContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  movieSubTitle: {\r\n    fontSize: 12,\r\n    fontFamily: FONTS.REGULAR,\r\n  },\r\n  rowAndCenter: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  imdbContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"flex-end\",\r\n    backgroundColor: COLORS.YELLOW,\r\n    borderBottomLeftRadius: 5,\r\n    borderTopRightRadius: 12,\r\n    paddingVertical: 3,\r\n  },\r\n  imdbImage: {\r\n    height: 20,\r\n    width: 50,\r\n    borderBottomLeftRadius: 5,\r\n  },\r\n  imdbRating: {\r\n    marginRight: 5,\r\n    color: COLORS.HEART,\r\n    fontFamily: FONTS.EXTRA_BOLD,\r\n  },\r\n});\r\n\r\nMovieCard.defaultProps = {\r\n  size: 1,\r\n  heartLess: true,\r\n};\r\n\r\nexport default MovieCard;\r\n"]},"metadata":{},"sourceType":"module"}